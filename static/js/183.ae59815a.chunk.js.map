{"version":3,"file":"static/js/183.ae59815a.chunk.js","mappings":"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","sources":["redux/phoneBook/phoneSelector.js","components/Form/Form.jsx","components/ContactsList/StyleContactLisr.jsx","components/ContactsList/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/StyleFilter.jsx","components/Filter/Filter.jsx","components/Error/StyleError.jsx","components/Error/Error.jsx","components/EmptyContactsList/StyleEmptyContactsList.jsx","components/EmptyContactsList/EmptyContactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectPhoneBookValue = state => state.phoneBook.contacts;\nexport const selectIsLoading = state => state.phoneBook.isLoading;\nexport const selectError = state => state.phoneBook.error;","import * as React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectPhoneBookValue } from \"redux/phoneBook/phoneSelector\";\nimport { postContactThunk } from \"services/fetchContacts\";\nimport { Avatar, Button, TextField, Box, Typography } from '@mui/material';\nimport ContactsIcon from '@mui/icons-material/Contacts';\nimport { LoadAdd } from 'components/Loader/Loader';\nimport { avatarStyle } from 'pages/StylePages';\n\nexport const options = {\n    width: '400px',\n    position: 'center-center',\n    timeout: 2000,\n    fontSize: '20px',\n};\n\nexport const Form = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const [add, setAdd] = useState(false);\n\n    const dispatch = useDispatch();\n    const phoneBook = useSelector(selectPhoneBookValue);\n\n    const [contactsCounter, setContactsCounter] = useState(phoneBook.length);\n    // console.log('Start contactsCounter', contactsCounter);\n\n    useEffect(() => {\n        setAdd(false)\n    }, [phoneBook])\n\n    useEffect(() => {\n        // console.log('phoneBook.length and contactsCounter:', (phoneBook.length), 'and', contactsCounter);\n        if ((phoneBook.length) > contactsCounter) {\n            Notify.success(`Contact added successfully`, options);\n            setContactsCounter(phoneBook.length)\n        };\n        if ((phoneBook.length) < contactsCounter) {\n            Notify.info(`Contact delete successfully`, options);\n            setContactsCounter(phoneBook.length)\n        };\n    },\n        [phoneBook.length, contactsCounter]);\n    \n    const onSubmitAddContact = (event) => {\n        event.preventDefault();\n        const newObj = { name, number };\n\n        if (isNameNew(phoneBook, newObj) !== undefined) {\n            Notify.warning(`${newObj.name} is already in contacts`, options);\n            return;\n        };\n        setAdd(true);\n        dispatch(postContactThunk(newObj))\n        \n        reset();\n    };\n\n    const isNameNew = (phoneBook, newObj) => {\n        return phoneBook.find(({ name }) =>\n            name.toLowerCase() === newObj.name.toLowerCase())\n    };\n\n    const onChangeInput = (event) => {\n        const { name, value } = event.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n        \n            default:\n                break;\n        };\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <>\n            <Avatar sx={avatarStyle}>\n                <ContactsIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Add Contact\n            </Typography>\n            <Box component=\"form\" onSubmit={onSubmitAddContact} sx={{ mt: 1 }}>\n                <TextField\n                    sx={{backgroundColor: 'rgba(208, 224, 241, 0.822)'}}\n                    // Validation\n                    inputProps={{ inputMode: 'text', pattern: \"^[a-zA-Zа-яА-Я]+(([a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" }} \n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Name\"\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    onChange={onChangeInput}\n                />\n                <TextField\n                    // Validation\n                    sx={{backgroundColor: 'rgba(208, 224, 241, 0.822)'}}\n                    inputProps={{ inputMode: 'tel', pattern: '[0-9]*' }} \n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Phone number\"\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    onChange={onChangeInput}\n                />\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2, display: 'flex', gap: 3 }}\n                >\n                    {add && <LoadAdd />}\n                    <p>Add contact</p> \n                </Button>\n            </Box>\n            </>\n    );\n};","export const boxListStyle = {\n    width: '100%',\n    mt: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n};\n\nexport const listItemStyle = {\n    bgcolor: 'rgba(208, 224, 241, 0.822)',\n    borderRadius: 2, mb: 1\n};","import { ListItem, IconButton, ListItemButton, ListItemText } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useDispatch } from \"react-redux\";\nimport { delContactThunk } from \"services/fetchContacts\";\nimport { useState } from \"react\";\nimport { SpinerDel } from \"components/Loader/Loader\";\nimport { listItemStyle } from \"./StyleContactLisr\";\n\n\nexport const ContactItem = ({ contact }) => {\n    const [load, setLoad] = useState(false);\n    const { id, name, number } = contact;\n    const dispatch = useDispatch();\n\n    const deleteContact = (contactId) => {\n        setLoad(true);\n        dispatch(delContactThunk(contactId))\n    };\n\n    return (\n        <ListItem key={id} sx={listItemStyle} secondaryAction={\n            <IconButton onClick={() => deleteContact(id)} aria-label=\"delete\">\n                {load ? <SpinerDel/> : <DeleteIcon />}\n            </IconButton>}>\n            <ListItemButton>\n                <ListItemText>{name}: {number}</ListItemText>\n            </ListItemButton>\n        </ListItem>\n    )\n};","import { selectFilter } from \"redux/filterSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectPhoneBookValue } from \"redux/phoneBook/phoneSelector\";\nimport { getContactsThunk } from \"services/fetchContacts\";\nimport { useEffect, useState } from \"react\";\nimport * as React from 'react';\nimport { Box, List, Typography, Avatar } from \"@mui/material\";\nimport ImportContactsIcon from '@mui/icons-material/ImportContacts';\nimport { Loader } from \"components/Loader/Loader\";\nimport { ContactItem } from \"./ContactItem\";\nimport { avatarStyle } from \"pages/StylePages\";\nimport { boxListStyle } from \"./StyleContactLisr\";\n\nexport const ContactsList = () => {\n    const dispatch = useDispatch();\n    const [load, setLoad] = useState(true);\n    const phoneBook = useSelector(selectPhoneBookValue);\n    const filterPhoneBook = useSelector(selectFilter);\n\n    useEffect(() => {\n        setLoad(false);\n    }, [])\n\n    useEffect(() => {\n        dispatch(getContactsThunk())\n    }, [dispatch]);\n\n    const lowerFilter = filterPhoneBook.toLowerCase();\n    const visibleContacts = phoneBook.filter(({ name }) =>\n        (name.toLowerCase().includes(lowerFilter)));\n    \n    return (\n        <Box sx={boxListStyle}>\n            <Avatar sx={avatarStyle}>\n                <ImportContactsIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Your Contacts\n            </Typography>\n            {load && <Loader/>}\n            <List sx={{ width: 396 }}>\n                {visibleContacts.map((contact) =>\n                    <ContactItem contact={contact} key={contact.id} />\n                )}\n            </List>\n        </Box>\n    );\n};","export const boxFilterStyle = {\n    mt: 1,\n    display: 'flex',\n    justifyContent: 'space-between',\n    gap: 5,\n    alignItems: 'center',\n};","import * as React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterSet, selectFilter } from \"redux/filterSlice\";\nimport { Avatar, TextField, Box } from '@mui/material';\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\nimport { avatarStyle } from 'pages/StylePages';\nimport { boxFilterStyle } from './StyleFilter';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filterPhoneBook = useSelector(selectFilter);\n\n    const onChangeFilter = (event) => {\n        const { value } = event.currentTarget;\n        dispatch(filterSet(value))\n    };\n    \n    return (\n        <Box component=\"div\" sx={boxFilterStyle}>\n            <Avatar sx={avatarStyle}>\n                <PersonSearchIcon />\n            </Avatar>\n            <TextField\n                margin=\"normal\"\n                inputProps={{ inputMode: 'text', pattern: \"^[a-zA-Zа-яА-Я]+(([a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" }} \n                sx={{\n                    width: 324,\n                    bgcolor: 'rgba(208, 224, 241, 0.822)',\n                }}\n                label=\"Find contacts by name:\"\n                type=\"text\"\n                name=\"filter\"\n                value={filterPhoneBook}\n                title=\"Enter the name\"\n                onChange={onChangeFilter}\n                // pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            />\n        </Box>\n    );\n};","\nexport const boxErrorStyle = {\n    mt: 5,\n    width: 420,\n    p: 5,\n    borderRadius: 5,\n    backgroundColor: 'red',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n}","import { useSelector } from \"react-redux\";\nimport { selectError } from \"redux/phoneBook/phoneSelector\";\nimport { Box, Typography } from \"@mui/material\";\nimport { boxErrorStyle } from \"./StyleError\";\n\nexport const Error = () => {\n    const error = useSelector(selectError);\n\n    return (\n        <Box sx={boxErrorStyle}>\n            <Typography color='white' component=\"h2\" variant=\"h5\">\n                We're sorry, {error}\n            </Typography>\n        </Box>\n)};","export const boxStyle = {\n    width: '100%',\n    height: 56,\n    borderRadius: 5,\n    mt: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    bgcolor: 'rgba(208, 224, 241, 0.822)',\n    alignItems: 'center'\n};","import { Box, Typography } from '@mui/material';\nimport { boxStyle } from './StyleEmptyContactsList';\n\nexport const EmptyContactsList = () => {\n    return (\n        <Box sx={boxStyle}>\n            <Typography component=\"h1\" variant=\"h5\">\n                You don't have any contacts yet\n            </Typography>\n        </Box >\n    )\n};","import { Form } from \"components/Form/Form\";\nimport { ContactsList } from \"components/ContactsList/ContactsList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Error } from \"components/Error/Error\";\nimport { useSelector } from \"react-redux\";\nimport { selectError, selectIsLoading, selectPhoneBookValue } from \"redux/phoneBook/phoneSelector\";\nimport { CssBaseline, Container, Box } from '@mui/material';\nimport * as React from 'react';\nimport contacts from 'photo/contacts.jpg';\nimport { boxContactsStyle, containerContactsStyle } from \"./StylePages\";\nimport { EmptyContactsList } from \"components/EmptyContactsList/EmptyContactsList\";\n\nconst ContactsPage = () => {\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    const phoneBook = useSelector(selectPhoneBookValue);\n    \n    return (\n        <Container component=\"main\" maxWidth=\"md\" sx={containerContactsStyle(contacts)}>\n            <CssBaseline />\n            <Box sx={boxContactsStyle}>\n                <Form />\n                <Filter />\n                {error ? <Error /> : <ContactsList />}\n                {phoneBook.length === 0 && !error && !isLoading &&\n                    <EmptyContactsList />\n                }\n            </Box>\n        </Container>\n    )\n};\n\nexport default ContactsPage;"],"names":["selectPhoneBookValue","state","phoneBook","contacts","selectIsLoading","isLoading","selectError","error","options","width","position","timeout","fontSize","Form","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","_useState5","_useState6","add","setAdd","dispatch","useDispatch","useSelector","_useState7","length","_useState8","contactsCounter","setContactsCounter","useEffect","Notify","isNameNew","newObj","find","_ref","toLowerCase","onChangeInput","event","_event$currentTarget","currentTarget","value","reset","_jsxs","_Fragment","children","_jsx","Avatar","sx","avatarStyle","ContactsIcon","Typography","component","variant","Box","onSubmit","preventDefault","undefined","postContactThunk","concat","mt","TextField","backgroundColor","inputProps","inputMode","pattern","margin","fullWidth","label","type","title","required","onChange","Button","mb","display","gap","LoadAdd","boxListStyle","flexDirection","alignItems","listItemStyle","bgcolor","borderRadius","ContactItem","contact","load","setLoad","id","ListItem","secondaryAction","IconButton","onClick","contactId","delContactThunk","SpinerDel","DeleteIcon","ListItemButton","ListItemText","ContactsList","filterPhoneBook","selectFilter","getContactsThunk","lowerFilter","visibleContacts","filter","includes","ImportContactsIcon","Loader","List","map","boxFilterStyle","justifyContent","Filter","PersonSearchIcon","filterSet","boxErrorStyle","p","Error","color","boxStyle","height","EmptyContactsList","Container","maxWidth","containerContactsStyle","CssBaseline","boxContactsStyle"],"sourceRoot":""}