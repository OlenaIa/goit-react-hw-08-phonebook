{"version":3,"file":"static/js/278.c503d13b.chunk.js","mappings":"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","sources":["components/ContactsList/StyleContactLisr.jsx","components/ContactsList/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/StyleFilter.jsx","components/Filter/Filter.jsx","components/Error/StyleError.jsx","components/Error/Error.jsx","components/EmptyContactsList/StyleEmptyContactsList.jsx","components/EmptyContactsList/EmptyContactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["export const boxListStyle = {\n    width: '100%',\n    mt: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n};\n\nexport const listItemStyle = {\n    bgcolor: 'rgba(208, 224, 241, 0.822)',\n    borderRadius: 2, mb: 1\n};","import { ListItem, IconButton, ListItemButton, ListItemText } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useDispatch } from \"react-redux\";\nimport { delContactThunk } from \"services/fetchContacts\";\nimport { useState } from \"react\";\nimport { SpinerDel } from \"components/Loader/Loader\";\nimport { listItemStyle } from \"./StyleContactLisr\";\n\n\nexport const ContactItem = ({ contact }) => {\n    const [load, setLoad] = useState(false);\n    const { id, name, number } = contact;\n    const dispatch = useDispatch();\n\n    const deleteContact = (contactId) => {\n        setLoad(true);\n        dispatch(delContactThunk(contactId))\n    };\n\n    return (\n        <ListItem key={id} sx={listItemStyle} secondaryAction={\n            <IconButton onClick={() => deleteContact(id)} aria-label=\"delete\">\n                {load ? <SpinerDel/> : <DeleteIcon />}\n            </IconButton>}>\n            <ListItemButton>\n                <ListItemText>{name}: {number}</ListItemText>\n            </ListItemButton>\n        </ListItem>\n    )\n};","import { selectFilter } from \"redux/filterSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectPhoneBookValue } from \"redux/phoneBook/phoneSelector\";\nimport { getContactsThunk } from \"services/fetchContacts\";\nimport { useEffect, useState } from \"react\";\nimport * as React from 'react';\nimport { Box, List, Typography, Avatar } from \"@mui/material\";\nimport ImportContactsIcon from '@mui/icons-material/ImportContacts';\nimport { Loader } from \"components/Loader/Loader\";\nimport { ContactItem } from \"./ContactItem\";\nimport { avatarStyle } from \"pages/StylePages\";\nimport { boxListStyle } from \"./StyleContactLisr\";\n\nexport const ContactsList = () => {\n    const dispatch = useDispatch();\n    const [load, setLoad] = useState(true);\n    const phoneBook = useSelector(selectPhoneBookValue);\n    const filterPhoneBook = useSelector(selectFilter);\n\n    useEffect(() => {\n        setLoad(false);\n    }, [])\n\n    useEffect(() => {\n        dispatch(getContactsThunk())\n    }, [dispatch]);\n\n    const lowerFilter = filterPhoneBook.toLowerCase();\n    const visibleContacts = phoneBook.filter(({ name }) =>\n        (name.toLowerCase().includes(lowerFilter)));\n    \n    return (\n        <Box sx={boxListStyle}>\n            <Avatar sx={avatarStyle}>\n                <ImportContactsIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Your Contacts\n            </Typography>\n            {load && <Loader/>}\n            <List sx={{ width: 396 }}>\n                {visibleContacts.map((contact) =>\n                    <ContactItem contact={contact} key={contact.id} />\n                )}\n            </List>\n        </Box>\n    );\n};","export const boxFilterStyle = {\n    mt: 1,\n    display: 'flex',\n    justifyContent: 'space-between',\n    gap: 5,\n    alignItems: 'center',\n};","import * as React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterSet, selectFilter } from \"redux/filterSlice\";\nimport { Avatar, TextField, Box } from '@mui/material';\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\nimport { avatarStyle } from 'pages/StylePages';\nimport { boxFilterStyle } from './StyleFilter';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filterPhoneBook = useSelector(selectFilter);\n\n    const onChangeFilter = (event) => {\n        const { value } = event.currentTarget;\n        dispatch(filterSet(value))\n    };\n    \n    return (\n        <Box component=\"div\" sx={boxFilterStyle}>\n            <Avatar sx={avatarStyle}>\n                <PersonSearchIcon />\n            </Avatar>\n            <TextField\n                margin=\"normal\"\n                inputProps={{ inputMode: 'text', pattern: \"^[a-zA-Zа-яА-Я]+(([a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" }} \n                sx={{\n                    width: 324,\n                    bgcolor: 'rgba(208, 224, 241, 0.822)',\n                }}\n                label=\"Find contacts by name:\"\n                type=\"text\"\n                name=\"filter\"\n                value={filterPhoneBook}\n                title=\"Enter the name\"\n                onChange={onChangeFilter}\n                // pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            />\n        </Box>\n    );\n};","\nexport const boxErrorStyle = {\n    mt: 5,\n    width: 420,\n    p: 5,\n    borderRadius: 5,\n    backgroundColor: 'red',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n}","import { useSelector } from \"react-redux\";\nimport { selectError } from \"redux/phoneBook/phoneSelector\";\nimport { Box, Typography } from \"@mui/material\";\nimport { boxErrorStyle } from \"./StyleError\";\n\nexport const Error = () => {\n    const error = useSelector(selectError);\n\n    return (\n        <Box sx={boxErrorStyle}>\n            <Typography color='white' component=\"h2\" variant=\"h5\">\n                We're sorry, {error}\n            </Typography>\n        </Box>\n)};","export const boxStyle = {\n    width: '100%',\n    height: 56,\n    borderRadius: 5,\n    mt: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    bgcolor: 'rgba(208, 224, 241, 0.822)',\n    alignItems: 'center'\n};","import { Box, Typography } from '@mui/material';\nimport { boxStyle } from './StyleEmptyContactsList';\n\nexport const EmptyContactsList = () => {\n    return (\n        <Box sx={boxStyle}>\n            <Typography component=\"h1\" variant=\"h5\">\n                You don't have any contacts yet\n            </Typography>\n        </Box >\n    )\n};","import { Form } from \"components/Form/Form\";\nimport { ContactsList } from \"components/ContactsList/ContactsList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Error } from \"components/Error/Error\";\nimport { useSelector } from \"react-redux\";\nimport { selectError, selectIsLoading, selectPhoneBookValue } from \"redux/phoneBook/phoneSelector\";\nimport { CssBaseline, Container, Box } from '@mui/material';\nimport * as React from 'react';\nimport contacts from 'photo/contacts.jpg';\nimport { boxContactsStyle, containerContactsStyle } from \"./StylePages\";\nimport { EmptyContactsList } from \"components/EmptyContactsList/EmptyContactsList\";\n\nconst ContactsPage = () => {\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    const phoneBook = useSelector(selectPhoneBookValue);\n    \n    return (\n        <Container component=\"main\" maxWidth=\"md\" sx={containerContactsStyle(contacts)}>\n            <CssBaseline />\n            <Box sx={boxContactsStyle}>\n                <Form />\n                <Filter />\n                {error ? <Error /> : <ContactsList />}\n                {phoneBook.length === 0 && !error && !isLoading &&\n                    <EmptyContactsList />\n                }\n            </Box>\n        </Container>\n    )\n};\n\nexport default ContactsPage;"],"names":["boxListStyle","width","mt","display","flexDirection","alignItems","listItemStyle","bgcolor","borderRadius","mb","ContactItem","_ref","contact","_useState","useState","_useState2","_slicedToArray","load","setLoad","id","name","number","dispatch","useDispatch","_jsx","ListItem","sx","secondaryAction","IconButton","onClick","contactId","delContactThunk","children","SpinerDel","DeleteIcon","ListItemButton","_jsxs","ListItemText","ContactsList","phoneBook","useSelector","selectPhoneBookValue","filterPhoneBook","selectFilter","useEffect","getContactsThunk","lowerFilter","toLowerCase","visibleContacts","filter","includes","Box","Avatar","avatarStyle","ImportContactsIcon","Typography","component","variant","Loader","List","map","boxFilterStyle","justifyContent","gap","Filter","PersonSearchIcon","TextField","margin","inputProps","inputMode","pattern","label","type","value","title","onChange","event","currentTarget","filterSet","boxErrorStyle","p","backgroundColor","Error","error","selectError","color","boxStyle","height","EmptyContactsList","isLoading","selectIsLoading","Container","maxWidth","containerContactsStyle","contacts","CssBaseline","boxContactsStyle","Form","length"],"sourceRoot":""}